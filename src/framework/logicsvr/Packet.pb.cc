// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Packet.proto

#include "Packet.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class PacketVersionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PacketVersion>
      _instance;
} _PacketVersion_default_instance_;
class RequestPacketPb_ContextEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestPacketPb_ContextEntry_DoNotUse>
      _instance;
} _RequestPacketPb_ContextEntry_DoNotUse_default_instance_;
class RequestPacketPb_StatusEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestPacketPb_StatusEntry_DoNotUse>
      _instance;
} _RequestPacketPb_StatusEntry_DoNotUse_default_instance_;
class RequestPacketPbDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestPacketPb>
      _instance;
} _RequestPacketPb_default_instance_;
class ResponsePacketPb_StatusEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResponsePacketPb_StatusEntry_DoNotUse>
      _instance;
} _ResponsePacketPb_StatusEntry_DoNotUse_default_instance_;
class ResponsePacketPbDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResponsePacketPb>
      _instance;
} _ResponsePacketPb_default_instance_;
namespace protobuf_Packet_2eproto {
void InitDefaultsPacketVersionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PacketVersion_default_instance_;
    new (ptr) ::PacketVersion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PacketVersion::InitAsDefaultInstance();
}

void InitDefaultsPacketVersion() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPacketVersionImpl);
}

void InitDefaultsRequestPacketPb_ContextEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_RequestPacketPb_ContextEntry_DoNotUse_default_instance_;
    new (ptr) ::RequestPacketPb_ContextEntry_DoNotUse();
  }
  ::RequestPacketPb_ContextEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsRequestPacketPb_ContextEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRequestPacketPb_ContextEntry_DoNotUseImpl);
}

void InitDefaultsRequestPacketPb_StatusEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_RequestPacketPb_StatusEntry_DoNotUse_default_instance_;
    new (ptr) ::RequestPacketPb_StatusEntry_DoNotUse();
  }
  ::RequestPacketPb_StatusEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsRequestPacketPb_StatusEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRequestPacketPb_StatusEntry_DoNotUseImpl);
}

void InitDefaultsRequestPacketPbImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Packet_2eproto::InitDefaultsRequestPacketPb_ContextEntry_DoNotUse();
  protobuf_Packet_2eproto::InitDefaultsRequestPacketPb_StatusEntry_DoNotUse();
  {
    void* ptr = &::_RequestPacketPb_default_instance_;
    new (ptr) ::RequestPacketPb();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RequestPacketPb::InitAsDefaultInstance();
}

void InitDefaultsRequestPacketPb() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRequestPacketPbImpl);
}

void InitDefaultsResponsePacketPb_StatusEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ResponsePacketPb_StatusEntry_DoNotUse_default_instance_;
    new (ptr) ::ResponsePacketPb_StatusEntry_DoNotUse();
  }
  ::ResponsePacketPb_StatusEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsResponsePacketPb_StatusEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsResponsePacketPb_StatusEntry_DoNotUseImpl);
}

void InitDefaultsResponsePacketPbImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Packet_2eproto::InitDefaultsResponsePacketPb_StatusEntry_DoNotUse();
  {
    void* ptr = &::_ResponsePacketPb_default_instance_;
    new (ptr) ::ResponsePacketPb();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ResponsePacketPb::InitAsDefaultInstance();
}

void InitDefaultsResponsePacketPb() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsResponsePacketPbImpl);
}

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PacketVersion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestPacketPb_ContextEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestPacketPb_ContextEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestPacketPb_ContextEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestPacketPb_ContextEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestPacketPb_StatusEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestPacketPb_StatusEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestPacketPb_StatusEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestPacketPb_StatusEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestPacketPb, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestPacketPb, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestPacketPb, sequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestPacketPb, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestPacketPb, subcmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestPacketPb, buffer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestPacketPb, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RequestPacketPb, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResponsePacketPb_StatusEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResponsePacketPb_StatusEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResponsePacketPb_StatusEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResponsePacketPb_StatusEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResponsePacketPb, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResponsePacketPb, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResponsePacketPb, sequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResponsePacketPb, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResponsePacketPb, buffer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResponsePacketPb, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResponsePacketPb, msg_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::PacketVersion)},
  { 5, 12, sizeof(::RequestPacketPb_ContextEntry_DoNotUse)},
  { 14, 21, sizeof(::RequestPacketPb_StatusEntry_DoNotUse)},
  { 23, -1, sizeof(::RequestPacketPb)},
  { 35, 42, sizeof(::ResponsePacketPb_StatusEntry_DoNotUse)},
  { 44, -1, sizeof(::ResponsePacketPb)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PacketVersion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RequestPacketPb_ContextEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RequestPacketPb_StatusEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RequestPacketPb_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ResponsePacketPb_StatusEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ResponsePacketPb_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Packet.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014Packet.proto\"L\n\rPacketVersion\";\n\007Versi"
      "on\022\016\n\nNO_VERSION\020\000\022\016\n\nV1_VERSION\020\001\022\020\n\013MA"
      "X_VERSION\020\220N\"\236\002\n\017RequestPacketPb\022\017\n\007vers"
      "ion\030\001 \001(\005\022\020\n\010sequence\030\002 \001(\t\022\013\n\003cmd\030\003 \001(\005"
      "\022\016\n\006subcmd\030\004 \001(\005\022\016\n\006buffer\030\005 \001(\014\022.\n\007cont"
      "ext\030\006 \003(\0132\035.RequestPacketPb.ContextEntry"
      "\022,\n\006status\030\007 \003(\0132\034.RequestPacketPb.Statu"
      "sEntry\032.\n\014ContextEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005v"
      "alue\030\002 \001(\t:\0028\001\032-\n\013StatusEntry\022\013\n\003key\030\001 \001"
      "(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\300\001\n\020ResponsePacket"
      "Pb\022\017\n\007version\030\001 \001(\005\022\020\n\010sequence\030\002 \001(\t\022\016\n"
      "\006result\030\003 \001(\005\022\016\n\006buffer\030\004 \001(\014\022-\n\006status\030"
      "\005 \003(\0132\035.ResponsePacketPb.StatusEntry\022\013\n\003"
      "msg\030\006 \001(\t\032-\n\013StatusEntry\022\013\n\003key\030\001 \001(\t\022\r\n"
      "\005value\030\002 \001(\t:\0028\001B+\n\031com.rufa.library.pro"
      "tocolB\016ProtocolEntityb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 629);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Packet.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Packet_2eproto
const ::google::protobuf::EnumDescriptor* PacketVersion_Version_descriptor() {
  protobuf_Packet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Packet_2eproto::file_level_enum_descriptors[0];
}
bool PacketVersion_Version_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 10000:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PacketVersion_Version PacketVersion::NO_VERSION;
const PacketVersion_Version PacketVersion::V1_VERSION;
const PacketVersion_Version PacketVersion::MAX_VERSION;
const PacketVersion_Version PacketVersion::Version_MIN;
const PacketVersion_Version PacketVersion::Version_MAX;
const int PacketVersion::Version_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void PacketVersion::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PacketVersion::PacketVersion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Packet_2eproto::InitDefaultsPacketVersion();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PacketVersion)
}
PacketVersion::PacketVersion(const PacketVersion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PacketVersion)
}

void PacketVersion::SharedCtor() {
  _cached_size_ = 0;
}

PacketVersion::~PacketVersion() {
  // @@protoc_insertion_point(destructor:PacketVersion)
  SharedDtor();
}

void PacketVersion::SharedDtor() {
}

void PacketVersion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PacketVersion::descriptor() {
  ::protobuf_Packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PacketVersion& PacketVersion::default_instance() {
  ::protobuf_Packet_2eproto::InitDefaultsPacketVersion();
  return *internal_default_instance();
}

PacketVersion* PacketVersion::New(::google::protobuf::Arena* arena) const {
  PacketVersion* n = new PacketVersion;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PacketVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:PacketVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool PacketVersion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PacketVersion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:PacketVersion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PacketVersion)
  return false;
#undef DO_
}

void PacketVersion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PacketVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PacketVersion)
}

::google::protobuf::uint8* PacketVersion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PacketVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PacketVersion)
  return target;
}

size_t PacketVersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PacketVersion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PacketVersion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PacketVersion)
  GOOGLE_DCHECK_NE(&from, this);
  const PacketVersion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PacketVersion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PacketVersion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PacketVersion)
    MergeFrom(*source);
  }
}

void PacketVersion::MergeFrom(const PacketVersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PacketVersion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PacketVersion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PacketVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PacketVersion::CopyFrom(const PacketVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PacketVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PacketVersion::IsInitialized() const {
  return true;
}

void PacketVersion::Swap(PacketVersion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PacketVersion::InternalSwap(PacketVersion* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PacketVersion::GetMetadata() const {
  protobuf_Packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

RequestPacketPb_ContextEntry_DoNotUse::RequestPacketPb_ContextEntry_DoNotUse() {}
RequestPacketPb_ContextEntry_DoNotUse::RequestPacketPb_ContextEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void RequestPacketPb_ContextEntry_DoNotUse::MergeFrom(const RequestPacketPb_ContextEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata RequestPacketPb_ContextEntry_DoNotUse::GetMetadata() const {
  ::protobuf_Packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Packet_2eproto::file_level_metadata[1];
}
void RequestPacketPb_ContextEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

RequestPacketPb_StatusEntry_DoNotUse::RequestPacketPb_StatusEntry_DoNotUse() {}
RequestPacketPb_StatusEntry_DoNotUse::RequestPacketPb_StatusEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void RequestPacketPb_StatusEntry_DoNotUse::MergeFrom(const RequestPacketPb_StatusEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata RequestPacketPb_StatusEntry_DoNotUse::GetMetadata() const {
  ::protobuf_Packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Packet_2eproto::file_level_metadata[2];
}
void RequestPacketPb_StatusEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void RequestPacketPb::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestPacketPb::kVersionFieldNumber;
const int RequestPacketPb::kSequenceFieldNumber;
const int RequestPacketPb::kCmdFieldNumber;
const int RequestPacketPb::kSubcmdFieldNumber;
const int RequestPacketPb::kBufferFieldNumber;
const int RequestPacketPb::kContextFieldNumber;
const int RequestPacketPb::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestPacketPb::RequestPacketPb()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Packet_2eproto::InitDefaultsRequestPacketPb();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RequestPacketPb)
}
RequestPacketPb::RequestPacketPb(const RequestPacketPb& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  context_.MergeFrom(from.context_);
  status_.MergeFrom(from.status_);
  sequence_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sequence().size() > 0) {
    sequence_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sequence_);
  }
  buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.buffer().size() > 0) {
    buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buffer_);
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&subcmd_) -
    reinterpret_cast<char*>(&version_)) + sizeof(subcmd_));
  // @@protoc_insertion_point(copy_constructor:RequestPacketPb)
}

void RequestPacketPb::SharedCtor() {
  sequence_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&subcmd_) -
      reinterpret_cast<char*>(&version_)) + sizeof(subcmd_));
  _cached_size_ = 0;
}

RequestPacketPb::~RequestPacketPb() {
  // @@protoc_insertion_point(destructor:RequestPacketPb)
  SharedDtor();
}

void RequestPacketPb::SharedDtor() {
  sequence_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buffer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RequestPacketPb::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestPacketPb::descriptor() {
  ::protobuf_Packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RequestPacketPb& RequestPacketPb::default_instance() {
  ::protobuf_Packet_2eproto::InitDefaultsRequestPacketPb();
  return *internal_default_instance();
}

RequestPacketPb* RequestPacketPb::New(::google::protobuf::Arena* arena) const {
  RequestPacketPb* n = new RequestPacketPb;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RequestPacketPb::Clear() {
// @@protoc_insertion_point(message_clear_start:RequestPacketPb)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  context_.Clear();
  status_.Clear();
  sequence_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&subcmd_) -
      reinterpret_cast<char*>(&version_)) + sizeof(subcmd_));
  _internal_metadata_.Clear();
}

bool RequestPacketPb::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RequestPacketPb)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sequence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sequence()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sequence().data(), static_cast<int>(this->sequence().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RequestPacketPb.sequence"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cmd = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 subcmd = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &subcmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes buffer = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buffer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> context = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          RequestPacketPb_ContextEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              RequestPacketPb_ContextEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&context_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RequestPacketPb.ContextEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RequestPacketPb.ContextEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> status = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          RequestPacketPb_StatusEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              RequestPacketPb_StatusEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&status_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RequestPacketPb.StatusEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RequestPacketPb.StatusEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RequestPacketPb)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RequestPacketPb)
  return false;
#undef DO_
}

void RequestPacketPb::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RequestPacketPb)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 version = 1;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->version(), output);
  }

  // string sequence = 2;
  if (this->sequence().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sequence().data(), static_cast<int>(this->sequence().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RequestPacketPb.sequence");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sequence(), output);
  }

  // int32 cmd = 3;
  if (this->cmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->cmd(), output);
  }

  // int32 subcmd = 4;
  if (this->subcmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->subcmd(), output);
  }

  // bytes buffer = 5;
  if (this->buffer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->buffer(), output);
  }

  // map<string, string> context = 6;
  if (!this->context().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "RequestPacketPb.ContextEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "RequestPacketPb.ContextEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->context().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->context().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->context().begin();
          it != this->context().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<RequestPacketPb_ContextEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(context_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<RequestPacketPb_ContextEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->context().begin();
          it != this->context().end(); ++it) {
        entry.reset(context_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> status = 7;
  if (!this->status().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "RequestPacketPb.StatusEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "RequestPacketPb.StatusEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->status().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->status().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->status().begin();
          it != this->status().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<RequestPacketPb_StatusEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(status_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<RequestPacketPb_StatusEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->status().begin();
          it != this->status().end(); ++it) {
        entry.reset(status_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RequestPacketPb)
}

::google::protobuf::uint8* RequestPacketPb::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RequestPacketPb)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 version = 1;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->version(), target);
  }

  // string sequence = 2;
  if (this->sequence().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sequence().data(), static_cast<int>(this->sequence().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RequestPacketPb.sequence");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sequence(), target);
  }

  // int32 cmd = 3;
  if (this->cmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->cmd(), target);
  }

  // int32 subcmd = 4;
  if (this->subcmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->subcmd(), target);
  }

  // bytes buffer = 5;
  if (this->buffer().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->buffer(), target);
  }

  // map<string, string> context = 6;
  if (!this->context().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "RequestPacketPb.ContextEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "RequestPacketPb.ContextEntry.value");
      }
    };

    if (deterministic &&
        this->context().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->context().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->context().begin();
          it != this->context().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<RequestPacketPb_ContextEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(context_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<RequestPacketPb_ContextEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->context().begin();
          it != this->context().end(); ++it) {
        entry.reset(context_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> status = 7;
  if (!this->status().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "RequestPacketPb.StatusEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "RequestPacketPb.StatusEntry.value");
      }
    };

    if (deterministic &&
        this->status().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->status().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->status().begin();
          it != this->status().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<RequestPacketPb_StatusEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(status_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<RequestPacketPb_StatusEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->status().begin();
          it != this->status().end(); ++it) {
        entry.reset(status_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RequestPacketPb)
  return target;
}

size_t RequestPacketPb::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RequestPacketPb)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> context = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->context_size());
  {
    ::google::protobuf::scoped_ptr<RequestPacketPb_ContextEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->context().begin();
        it != this->context().end(); ++it) {
      entry.reset(context_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, string> status = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->status_size());
  {
    ::google::protobuf::scoped_ptr<RequestPacketPb_StatusEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->status().begin();
        it != this->status().end(); ++it) {
      entry.reset(status_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string sequence = 2;
  if (this->sequence().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sequence());
  }

  // bytes buffer = 5;
  if (this->buffer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->buffer());
  }

  // int32 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  // int32 cmd = 3;
  if (this->cmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cmd());
  }

  // int32 subcmd = 4;
  if (this->subcmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->subcmd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestPacketPb::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RequestPacketPb)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestPacketPb* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestPacketPb>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RequestPacketPb)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RequestPacketPb)
    MergeFrom(*source);
  }
}

void RequestPacketPb::MergeFrom(const RequestPacketPb& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RequestPacketPb)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  context_.MergeFrom(from.context_);
  status_.MergeFrom(from.status_);
  if (from.sequence().size() > 0) {

    sequence_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sequence_);
  }
  if (from.buffer().size() > 0) {

    buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buffer_);
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.cmd() != 0) {
    set_cmd(from.cmd());
  }
  if (from.subcmd() != 0) {
    set_subcmd(from.subcmd());
  }
}

void RequestPacketPb::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RequestPacketPb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestPacketPb::CopyFrom(const RequestPacketPb& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RequestPacketPb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestPacketPb::IsInitialized() const {
  return true;
}

void RequestPacketPb::Swap(RequestPacketPb* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestPacketPb::InternalSwap(RequestPacketPb* other) {
  using std::swap;
  context_.Swap(&other->context_);
  status_.Swap(&other->status_);
  sequence_.Swap(&other->sequence_);
  buffer_.Swap(&other->buffer_);
  swap(version_, other->version_);
  swap(cmd_, other->cmd_);
  swap(subcmd_, other->subcmd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RequestPacketPb::GetMetadata() const {
  protobuf_Packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ResponsePacketPb_StatusEntry_DoNotUse::ResponsePacketPb_StatusEntry_DoNotUse() {}
ResponsePacketPb_StatusEntry_DoNotUse::ResponsePacketPb_StatusEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ResponsePacketPb_StatusEntry_DoNotUse::MergeFrom(const ResponsePacketPb_StatusEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ResponsePacketPb_StatusEntry_DoNotUse::GetMetadata() const {
  ::protobuf_Packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Packet_2eproto::file_level_metadata[4];
}
void ResponsePacketPb_StatusEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ResponsePacketPb::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponsePacketPb::kVersionFieldNumber;
const int ResponsePacketPb::kSequenceFieldNumber;
const int ResponsePacketPb::kResultFieldNumber;
const int ResponsePacketPb::kBufferFieldNumber;
const int ResponsePacketPb::kStatusFieldNumber;
const int ResponsePacketPb::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponsePacketPb::ResponsePacketPb()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Packet_2eproto::InitDefaultsResponsePacketPb();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ResponsePacketPb)
}
ResponsePacketPb::ResponsePacketPb(const ResponsePacketPb& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_.MergeFrom(from.status_);
  sequence_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sequence().size() > 0) {
    sequence_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sequence_);
  }
  buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.buffer().size() > 0) {
    buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buffer_);
  }
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&version_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:ResponsePacketPb)
}

void ResponsePacketPb::SharedCtor() {
  sequence_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&version_)) + sizeof(result_));
  _cached_size_ = 0;
}

ResponsePacketPb::~ResponsePacketPb() {
  // @@protoc_insertion_point(destructor:ResponsePacketPb)
  SharedDtor();
}

void ResponsePacketPb::SharedDtor() {
  sequence_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buffer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResponsePacketPb::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponsePacketPb::descriptor() {
  ::protobuf_Packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResponsePacketPb& ResponsePacketPb::default_instance() {
  ::protobuf_Packet_2eproto::InitDefaultsResponsePacketPb();
  return *internal_default_instance();
}

ResponsePacketPb* ResponsePacketPb::New(::google::protobuf::Arena* arena) const {
  ResponsePacketPb* n = new ResponsePacketPb;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponsePacketPb::Clear() {
// @@protoc_insertion_point(message_clear_start:ResponsePacketPb)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.Clear();
  sequence_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&version_)) + sizeof(result_));
  _internal_metadata_.Clear();
}

bool ResponsePacketPb::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ResponsePacketPb)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sequence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sequence()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sequence().data(), static_cast<int>(this->sequence().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ResponsePacketPb.sequence"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes buffer = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buffer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> status = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          ResponsePacketPb_StatusEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ResponsePacketPb_StatusEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&status_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ResponsePacketPb.StatusEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ResponsePacketPb.StatusEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ResponsePacketPb.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ResponsePacketPb)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ResponsePacketPb)
  return false;
#undef DO_
}

void ResponsePacketPb::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ResponsePacketPb)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 version = 1;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->version(), output);
  }

  // string sequence = 2;
  if (this->sequence().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sequence().data(), static_cast<int>(this->sequence().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ResponsePacketPb.sequence");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sequence(), output);
  }

  // int32 result = 3;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->result(), output);
  }

  // bytes buffer = 4;
  if (this->buffer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->buffer(), output);
  }

  // map<string, string> status = 5;
  if (!this->status().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ResponsePacketPb.StatusEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ResponsePacketPb.StatusEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->status().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->status().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->status().begin();
          it != this->status().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ResponsePacketPb_StatusEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(status_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ResponsePacketPb_StatusEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->status().begin();
          it != this->status().end(); ++it) {
        entry.reset(status_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // string msg = 6;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ResponsePacketPb.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ResponsePacketPb)
}

::google::protobuf::uint8* ResponsePacketPb::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ResponsePacketPb)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 version = 1;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->version(), target);
  }

  // string sequence = 2;
  if (this->sequence().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sequence().data(), static_cast<int>(this->sequence().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ResponsePacketPb.sequence");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sequence(), target);
  }

  // int32 result = 3;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->result(), target);
  }

  // bytes buffer = 4;
  if (this->buffer().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->buffer(), target);
  }

  // map<string, string> status = 5;
  if (!this->status().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ResponsePacketPb.StatusEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ResponsePacketPb.StatusEntry.value");
      }
    };

    if (deterministic &&
        this->status().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->status().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->status().begin();
          it != this->status().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ResponsePacketPb_StatusEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(status_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ResponsePacketPb_StatusEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->status().begin();
          it != this->status().end(); ++it) {
        entry.reset(status_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // string msg = 6;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ResponsePacketPb.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResponsePacketPb)
  return target;
}

size_t ResponsePacketPb::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResponsePacketPb)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> status = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->status_size());
  {
    ::google::protobuf::scoped_ptr<ResponsePacketPb_StatusEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->status().begin();
        it != this->status().end(); ++it) {
      entry.reset(status_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string sequence = 2;
  if (this->sequence().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sequence());
  }

  // bytes buffer = 4;
  if (this->buffer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->buffer());
  }

  // string msg = 6;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // int32 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  // int32 result = 3;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponsePacketPb::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ResponsePacketPb)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponsePacketPb* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponsePacketPb>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ResponsePacketPb)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ResponsePacketPb)
    MergeFrom(*source);
  }
}

void ResponsePacketPb::MergeFrom(const ResponsePacketPb& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResponsePacketPb)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  status_.MergeFrom(from.status_);
  if (from.sequence().size() > 0) {

    sequence_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sequence_);
  }
  if (from.buffer().size() > 0) {

    buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buffer_);
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void ResponsePacketPb::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ResponsePacketPb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponsePacketPb::CopyFrom(const ResponsePacketPb& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResponsePacketPb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponsePacketPb::IsInitialized() const {
  return true;
}

void ResponsePacketPb::Swap(ResponsePacketPb* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponsePacketPb::InternalSwap(ResponsePacketPb* other) {
  using std::swap;
  status_.Swap(&other->status_);
  sequence_.Swap(&other->sequence_);
  buffer_.Swap(&other->buffer_);
  msg_.Swap(&other->msg_);
  swap(version_, other->version_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResponsePacketPb::GetMetadata() const {
  protobuf_Packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
